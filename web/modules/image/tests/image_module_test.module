<?php

/**
 * @file
 * Provides Image module hook implementations for testing purposes.
 */

function image_module_test_file_download($uri) {
  if (variable_get('image_module_test_file_download', FALSE) == $uri) {
    return array('X-Image-Owned-By' => 'image_module_test');
  }
  if (variable_get('image_module_test_invalid_headers', FALSE) == $uri) {
    return array('Content-Type' => 'image/png');
  }
}

/**
 * Implements hook_image_effect_info().
 */
function image_module_test_image_effect_info() {
  $effects = array(
    'image_module_test_null' => array(
<<<<<<< HEAD
      'label' => 'image_module_test_null',
      'effect callback' => 'image_module_test_null_effect',
=======
    'effect callback' => 'image_module_test_null_effect',
>>>>>>> 7441251788c5c6f1a7dccf0c8b889f62dff9678d
    ),
  );

  return $effects;
}

/**
 * Image effect callback; Null.
 *
 * @param $image
 *   An image object returned by image_load().
 * @param $data
 *   An array with no attributes.
 *
 * @return
 *   TRUE
 */
<<<<<<< HEAD
function image_module_test_null_effect(&$image, array $data) {
=======
function image_module_test_null_effect(array &$image, array $data) {
>>>>>>> 7441251788c5c6f1a7dccf0c8b889f62dff9678d
  return TRUE;
}

/**
 * Implements hook_image_effect_info_alter().
 *
 * Used to keep a count of cache misses in image_effect_definitions().
 */
function image_module_test_image_effect_info_alter(&$effects) {
  $image_effects_definition_called = &drupal_static(__FUNCTION__, 0);
  $image_effects_definition_called++;
}
